/*
Format Name: Scope XML
*/

dataType id {
    baseType: string;
    pattern: '\d{12}';
}

dataType derivative_type {
    baseType: string;
    allowedValues: 'translation', 'localization';
}

dataType versionNumber {
    baseType: integer;
    minimumValue: 1;
}

dataType iso_639_1 {
    baseType: string;
    allowedValues:  'ab', 'aa', 'af', 'ak', 'sq', 'am', 'ar', 'an', 'hy', 'as', 
                    'av', 'ae', 'ay', 'az', 'bm', 'ba', 'eu', 'be', 'bn', 'bh', 
                    'bi', 'bs', 'br', 'bg', 'my', 'ca', 'ch', 'ce', 'ny', 'zh', 
                    'cv', 'kw', 'co', 'cr', 'hr', 'cs', 'da', 'dv', 'nl', 'dz', 
                    'en', 'eo', 'et', 'ee', 'fo', 'fj', 'fi', 'fr', 'ff', 'gl', 
                    'ka', 'de', 'el', 'gn', 'gu', 'ht', 'ha', 'he', 'hz', 'hi', 
                    'ho', 'hu', 'ia', 'id', 'ie', 'ga', 'ig', 'ik', 'io', 'is', 
                    'it', 'iu', 'ja', 'jv', 'kl', 'kn', 'kr', 'ks', 'kk', 'km', 
                    'ki', 'rw', 'ky', 'kv', 'kg', 'ko', 'ku', 'kj', 'la', 'lb', 
                    'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'gv', 'mk', 'mg', 
                    'ms', 'ml', 'mt', 'mi', 'mr', 'mh', 'mn', 'na', 'nv', 'nd', 
                    'ne', 'ng', 'nb', 'nn', 'no', 'ii', 'nr', 'oc', 'oj', 'cu', 
                    'om', 'or', 'os', 'pa', 'pi', 'fa', 'pl', 'ps', 'pt', 'qu', 
                    'rm', 'rn', 'ro', 'ru', 'sa', 'sc', 'sd', 'se', 'sm', 'sg', 
                    'sr', 'gd', 'sn', 'si', 'sk', 'sl', 'so', 'st', 'es', 'su', 
                    'sw', 'ss', 'sv', 'ta', 'te', 'tg', 'th', 'ti', 'bo', 'tk', 
                    'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 
                    'ur', 'uz', 've', 'vi', 'vo', 'wa', 'cy', 'wo', 'fy', 'xh', 
                    'yi', 'yo', 'za', 'zu';
}

dataType dialectCode {
    baseType: string;
}

attribute id {
    valueType: id;
}

attribute derivative_of {
    valueType: id;
}

attribute derivative_type {
    valueType: derivative_type;
}

attribute version {
    valueType: versionNumber;
}

root element scope {
    attributes: id, derivative_of (optional), derivative_type (optional), version;
    allowedContent: elements only;
    subelements: [ language, dialects, objectives, prerequisites, exclusions ];
}

attribute name {
    valueType: string;
}

attribute name_in_english {
    valueType: string;
}

attribute languageCode {
    tagName: 'code';
    valueType: iso_639_1;
}

attribute dialectCode {
    tagName: 'code';
    valueType: dialectCode;
}

element language {
    attributes: languageCode, name (optional), name_in_english (optional);
    allowedContent: none;
}

element dialects {
    allowedContent: elements only;
    subelements: [ dialect (n >= 1) ];
}

element dialect {
    attributes: dialectCode, name (optional), name_in_english (optional);
    allowedContent: none;
}

element objectives {
    allowedContent: elements only;
    subelements: [ skill (n >= 0) ];
}

element prerequisites {
    allowedContent: elements only;
    subelements: [ item (n >= 0) ];
}

element exclusions {
    allowedContent: elements only;
    subelements: [ item (n >= 0) ];
}

element skill {
    allowedContent: elements and text;
    subelements: { m (n >= 0) };
}

element item {
    allowedContent: elements and text;
    subelements: { m (n >= 0) };
}

element m {
    allowedContent: elements and text;
}