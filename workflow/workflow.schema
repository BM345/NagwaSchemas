/*
Format Name: Workflow XML
*/

dataType reference {
    baseType: string;
    pattern: '[A-Za-z0-9_\-]+';
}

dataType workflowType {
    baseType: string;
    allowedValues: 'creation',
                   'update',
                   'translation',
                   'translation_update',
                   'localization',
                   'localization_update';
}

dataType entityTypeList {
    baseType: string;
    pattern: '(question|explainer|lesson_video|question_video|scope)(,\s*(question|explainer|lesson_video|question_video|scope))*';
}

dataType subject {
    baseType: string;
    allowedValues:  'mathematics',
                    'physics',
                    'chemistry',
                    'biology',
                    'science',
                    'english',
                    'arabic',
                    'french',
                    'philosophy',
                    'psychology',
                    'sociology',
                    'history',
                    'geography',
                    'geology',
                    'economics';
}

dataType statusCategory {
    baseType: string;
}

dataType statusType {
    baseType: string;
    allowedValues: 'manual_processing', 'automated_processing';
}

dataType transitionType {
    baseType: string;
    allowedValues: 'submit', 'approve', 'reject', 'send', 'pass', 'fail', 'error';
}

dataType autoAssignmentPredicate {
    baseType: string;
}

dataType rulePredicate {
    baseType: string;
}

attribute reference {
    valueType: reference;
}

attribute workflowType {
    tagName: 'type';
    valueType: workflowType;
}

attribute limit_to_entity_types {
    valueType: entityTypeList;
}

attribute limit_to_subjects {
    valueType: list(subject, ',');
}

root element workflow {
    attributes: reference, workflowType (optional), limit_to_entity_types (optional), limit_to_subjects (optional);
    allowedContent: elements only;
    subelements: [ name, description (optional), statuses, transitions ];
}

element name {
    allowedContent: text only;
}

element description {
    allowedContent: text only;
}

attribute initial {
    valueType: reference;
}

attribute final {
    valueType: reference;
}

element statuses {
    attributes: initial, final;
    allowedContent: elements only;
    subelements: [ status (n >= 0) ];
}

attribute category {
    valueType: statusCategory;
}

attribute statusType {
    tagName: 'type';
    valueType: statusType;
}

element status {
    attributes: reference, category (optional), statusType (optional);
    allowedContent: elements only;
    subelements: [ name, description (optional) ];
}

element transitions {
    allowedContent: elements only;
    subelements: [ transition (n >= 0) ];
}

attribute from {
    valueType: reference;
}

attribute to {
    valueType: reference;
}

attribute transitionType {
    tagName: 'type';
    valueType: transitionType;
}

attribute comment_required {
    valueType: boolean;
}

attribute auto_assign_to {
    valueType: autoAssignmentPredicate;
}

element transition {
    attributes: reference, from, to, transitionType (optional), comment_required (optional), auto_assign_to (optional);
    allowedContent: elements only;
    subelements: [ name, button_text (optional), description (optional), rules ];
}

element button_text {
    allowedContent: text only;
}

element rules {
    allowedContent: elements only;
    subelements: [ rule (n >= 0) ];
}

attribute allow_if {
    valueType: rulePredicate;
}

element rule {
    attributes: allow_if;
    allowedContent: none;
}

